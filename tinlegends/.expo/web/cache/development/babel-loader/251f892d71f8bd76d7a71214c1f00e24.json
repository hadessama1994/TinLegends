{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hades\\\\myapp\\\\tindev\\\\tinlegends\\\\src\\\\pages\\\\HomeLogin.js\";\n\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport api from \"../services/api\";\nimport { SpinnerComponent } from \"../pages/spinnerComponent/SpinnerComponent\";\n\nvar DismissKeyboardEverywhere = function DismissKeyboardEverywhere(_ref) {\n  var children = _ref.children;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, children);\n};\n\nvar HomeLogin = function HomeLogin(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function handleLogin() {\n    var response, _id;\n\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.post('/players', {\n              username: user\n            }));\n\n          case 2:\n            response = _context.sent;\n            _id = response.data._id;\n            navigation.navigate('TinLegends', {\n              _id: _id\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(DismissKeyboardEverywhere, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }) : React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    enabled: Platform.OS = \"ios\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.img,\n    source: {\n      uri: 'https://i.imgur.com/Nk12wEK.png'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }), React.createElement(TextInput, {\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"#999\",\n    placeholder: \"Nickname\",\n    style: styles.input,\n    value: user,\n    onChangeText: setUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleLogin();\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }\n  }, \"Entrar\")), React.createElement(SpinnerComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#f3f3f3\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  img: {\n    width: 350,\n    height: 150\n  },\n  input: {\n    height: 56,\n    alignSelf: \"stretch\",\n    backgroundColor: \"#ffffff\",\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 4,\n    marginTop: 10,\n    paddingHorizontal: 15\n  },\n  button: {\n    backgroundColor: \"#FFC107\",\n    height: 46,\n    alignSelf: \"stretch\",\n    borderRadius: 4,\n    marginTop: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: \"400\"\n  }\n});\nexport default HomeLogin;","map":{"version":3,"sources":["C:/Users/hades/myapp/tindev/tinlegends/src/pages/HomeLogin.js"],"names":["React","useState","api","SpinnerComponent","DismissKeyboardEverywhere","children","Keyboard","dismiss","HomeLogin","navigation","user","setUser","isLoading","setLoading","handleLogin","post","username","response","_id","data","navigate","styles","container","Platform","OS","img","uri","input","button","buttonText","StyleSheet","create","backgroundColor","flex","alignItems","justifyContent","padding","width","height","alignSelf","borderWidth","borderColor","borderRadius","marginTop","paddingHorizontal","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Keyboard, TouchableWithoutFeedback, KeyboardAvoidingView, Text, ActivityIndicator, StyleSheet, Image, TextInput, TouchableOpacity, Platform } from 'react-native';\r\nimport api from '../services/api'\r\nimport { SpinnerComponent} from '../pages/spinnerComponent/SpinnerComponent';\r\n\r\n\r\nconst DismissKeyboardEverywhere = ({children})=> {\r\n   return (\r\n      <TouchableWithoutFeedback onPress={()=>Keyboard.dismiss()}>\r\n      {children}\r\n      </TouchableWithoutFeedback>\r\n   )}\r\n\r\nconst HomeLogin = ({ navigation }) => {   \r\n   const [user, setUser] = useState ('');\r\n   const [isLoading, setLoading] = useState(false);   \r\n   \r\n  async function handleLogin(){\r\n   \r\n     const response = await api.post('/players', {\r\n        username: user,\r\n      });\r\n     const {_id} = response.data;\r\n     navigation.navigate('TinLegends', {_id});      \r\n   }\r\n  return (\r\n     <DismissKeyboardEverywhere>\r\n         {isLoading ? <ActivityIndicator/> : (\r\n      <KeyboardAvoidingView       \r\n         style={styles.container} \r\n         behavior=\"padding\"\r\n         enabled={Platform.OS=\"ios\"}>\r\n         <Image style={styles.img} source = {{uri: 'https://i.imgur.com/Nk12wEK.png'}}/>\r\n         <TextInput \r\n            autoCorrect={false}         \r\n            autoCapitalize=\"none\" \r\n            placeholderTextColor=\"#999\" \r\n            placeholder=\"Nickname\" \r\n            style={styles.input}\r\n            value={user}\r\n            onChangeText={setUser}>           \r\n         </TextInput>\r\n         <TouchableOpacity onPress={() => handleLogin()} style={styles.button}>\r\n               <Text style={styles.buttonText}>Entrar</Text>\r\n            </TouchableOpacity>\r\n            <SpinnerComponent />\r\n      </KeyboardAvoidingView>\r\n      )}\r\n      \r\n     </DismissKeyboardEverywhere>\r\n  )\r\n}\r\n\r\nconst styles  = StyleSheet.create({\r\n   container:{\r\n      backgroundColor: \"#f3f3f3\",\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: 30,\r\n   },\r\n   img:{\r\n      width: 350,\r\n      height: 150,\r\n   },\r\n   input:{\r\n      height: 56,\r\n      alignSelf: \"stretch\",\r\n      backgroundColor: \"#ffffff\",\r\n      borderWidth: 1,\r\n      borderColor: \"#ddd\",\r\n      borderRadius: 4,\r\n      marginTop: 10,\r\n      paddingHorizontal: 15,\r\n\r\n   },\r\n   button:{\r\n      backgroundColor: \"#FFC107\",\r\n      height: 46,\r\n      alignSelf: \"stretch\",\r\n      borderRadius: 4,\r\n      marginTop: 10,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n   },\r\n   buttonText:{\r\n      fontSize: 18,\r\n      fontWeight: \"400\",\r\n      \r\n\r\n   },\r\n})\r\n\r\nexport default HomeLogin;"]},"metadata":{},"sourceType":"module"}